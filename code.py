import requests
from urllib.parse import urljoin
from bs4 import BeautifulSoup

class Scanner:
    def __init__(self, url, ignore_links):
        self.session = requests.Session()
        self.target_url = url
        self.target_links = []
        self.links_to_ignore = ignore_links

    def extract_links_from(self, url):
        response = self.session.get(url)
        return BeautifulSoup(response.content, "html.parser").find_all("a")

    def crawl(self):
        href_links = self.extract_links_from(self.target_url)
        for link in href_links:
            href = link.get("href")
            if href and href not in self.links_to_ignore:
                href = urljoin(self.target_url, href)
                if self.target_url in href and href not in self.target_links:
                    self.target_links.append(href)
                    print("[+] Discovered URL --> " + href)
                    self.crawl()

    def extract_forms(self, url):
        response = self.session.get(url)
        parsed_html = BeautifulSoup(response.content, "html.parser")
        return parsed_html.find_all("form")

    def submit_form(self, form, value, url):
        action = form.get("action")
        post_url = urljoin(url, action)
        method = form.get("method")
        inputs = form.find_all("input")
        post_data = {}
        for input_element in inputs:
            input_name = input_element.get("name")
            input_type = input_element.get("type")
            input_value = input_element.get("value")
            if input_type == "text":
                input_value = value
            post_data[input_name] = input_value
        if method == "post":
            return self.session.post(post_url, data=post_data)
        return self.session.get(post_url, params=post_data)
    def run_scanner(self):
        for link in self.target_links:
            forms = self.extract_forms(link)
            for form in forms:
                print("[+] Testing form in " + link)
                is_vulnerable_to_xss = self.test_xss_in_form(form, link)
                if is_vulnerable_to_xss:
                    print("\n\n[***] XSS discovered in " + link + " in the following form")
                    print(form)
            if "=" in link:
                print("[+] Testing " + link)
                is_vulnerable_to_xss = self.test_xss_in_link(link)
                if is_vulnerable_to_xss:
                    print("[***] Discovered XSS in " + link)
    def test_xss_in_link(self, url):
        xss_test_script = "<sCript>alert('test')</scriPt>"
        url = url.replace("=", "=" + xss_test_script)
        response = self.session.get(url)
        return xss_test_script in response.content.decode()

    def test_xss_in_form(self, form, url):
        xss_test_script = "<sCript>alert('test')</scriPt>"
        response = self.submit_form(form, xss_test_script, url)
        return xss_test_script in response.content.decode()
if __name__ == "__main__":
    target_url = input("Enter target URL: ")
    links_to_ignore = ["http://example.com/logout"]
    vuln_scanner = Scanner(target_url, links_to_ignore)
    vuln_scanner.crawl()
    vuln_scanner.run_scanner()
    